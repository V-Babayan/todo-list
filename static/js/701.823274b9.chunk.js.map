{"version":3,"file":"static/js/701.823274b9.chunk.js","mappings":"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","sources":["components/core-ui/input/Input.styled.js","components/core-ui/input/Input.jsx","components/core-ui/select/StyledSelect.jsx","components/core-ui/select/Select.jsx","components/filter-form/FilterForm.styled.js","components/filter-form/FilterForm.jsx","components/modal-form/ModalForm.styled.js","components/modal/Modal.styled.js","components/modal/Modal.jsx","components/todo-item/TodoItem.styled.js","components/core-ui/checkbox/Checkbox.styled.js","icons/CheckBird.icon.jsx","components/core-ui/checkbox/Checkbox.jsx","components/todo-item/TodoItem.jsx","components/todo-list/TodoList.jsx","components/todo-list/TodoList.styled.js","helpers/dateWorking.js","helpers/priorityNumbers.js","hooks/useTodos.js","components/delete-modal/DeleteModal.styled.js","components/delete-modal/DeleteModal.jsx","pages/Trash.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nconst StyledInput = styled.input`\n  width: 100%;\n\n  border-radius: 3px;\n  border: 1px solid #7aa7c7;\n  box-shadow: rgba(255, 255, 255, 0.7) 0 1px 0 0 inset;\n  padding: 8px 0.8em;\n\n  font-size: 13px;\n  line-height: 1.15385;\n  color: #39739d;\n\n  transition: all 0.2s linear;\n\n  background-color: #e1ecf4;\n\n  &:hover,\n  &:focus {\n    background-color: #b3d3ea;\n    color: #2c5777;\n  }\n\n  &:focus {\n    box-shadow: 0 0 0 4px rgba(0, 149, 255, 0.15);\n  }\n\n  &:active {\n    background-color: #a0c7e4;\n    box-shadow: none;\n    color: #2c5777;\n  }\n`;\n\nexport default StyledInput;\n","import React, { memo } from \"react\";\n\nimport StyledInput from \"./Input.styled\";\n\nconst Input = ({ value = \"\", ...props }) => {\n  return (\n    <StyledInput\n      value={value}\n      {...props}\n    />\n  );\n};\n\nexport default memo(Input);\n","import styled from \"styled-components\";\n\nexport const StyledSelect = styled.select`\n  border-radius: 3px;\n  border: 1px solid #7aa7c7;\n  box-shadow: rgba(255, 255, 255, 0.7) 0 1px 0 0 inset;\n  padding: 8px 0.8em;\n\n  font-size: 13px;\n  line-height: 1.15385;\n  color: #39739d;\n  text-align: center;\n\n  transition: all 0.2s linear;\n\n  background-color: #e1ecf4;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #b3d3ea;\n    color: #2c5777;\n  }\n\n  &:focus {\n    box-shadow: 0 0 0 4px rgba(0, 149, 255, 0.15);\n  }\n\n  &:active {\n    background-color: #a0c7e4;\n    box-shadow: none;\n    color: #2c5777;\n  }\n`;\n","import React, { memo } from \"react\";\n\nimport { StyledSelect } from \"./StyledSelect\";\n\nconst Select = ({ defaultTitle, options = [], setValue, value }) => {\n  return (\n    <StyledSelect\n      value={value}\n      onChange={(e) => setValue(e.target.value)}>\n      <option disabled>{defaultTitle}</option>\n      {options.map(({ value, name }) => (\n        <option\n          key={value}\n          value={value}>\n          {name}\n        </option>\n      ))}\n    </StyledSelect>\n  );\n};\n\nexport default memo(Select);\n","import styled from \"styled-components\";\n\nexport const StyledFilterForm = styled.form`\n  display: flex;\n  gap: 20px;\n  margin: 20px 0;\n  align-items: center;\n`;\n","import React, { useCallback, memo } from \"react\";\n\nimport Input from \"../core-ui/input/Input\";\nimport Select from \"../core-ui/select/Select\";\nimport { StyledFilterForm } from \"./FilterForm.styled\";\nimport { options } from \"../../helpers/consts\";\n\nconst FilterForm = ({ filter, setFilter }) => {\n  const inputHandle = useCallback(\n    (e) => setFilter((prev) => ({ ...prev, query: e.target.value })),\n    [setFilter]\n  );\n  const selectHandle = useCallback(\n    (newValue) => setFilter((prev) => ({ ...prev, sort: newValue })),\n    [setFilter]\n  );\n\n  return (\n    <StyledFilterForm onSubmit={(e) => e.preventDefault()}>\n      <Input\n        value={filter.query}\n        onChange={inputHandle}\n        placeholder='Search...'\n      />\n\n      <Select\n        options={options}\n        defaultTitle='Sorting by'\n        value={filter.sort}\n        setValue={selectHandle}\n      />\n    </StyledFilterForm>\n  );\n};\n\nexport default memo(FilterForm);\n","import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const StyledFieldset = styled.fieldset`\n  border: 1px solid #39739d;\n  border-radius: 5px;\n  padding: 10px;\n`;\nexport const StyledLegend = styled.legend`\n  color: #39739d;\n`;\n\nexport const StyledRadioContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n`;\n\nexport const StyledButtonsContainer = styled.div`\n  align-self: stretch;\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport const StyledDatesContainer = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n","import styled, { keyframes } from \"styled-components\";\nconst openModal = keyframes`\n  0%{\n    opacity: 0;\n  }\n  100%{\n    opacity: 1;\n  }\n`;\nconst openModalContent = keyframes`\n  0%{\n    transform: scale(0);\n  }\n  100%{\n    transform: scale(1);\n  }\n`;\n\nexport const StyledModal = styled.div`\n  height: 100vh;\n  width: 100vw;\n  position: fixed;\n  top: 0;\n  left: 0;\n  background: #00000088;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &.entering {\n    animation: ${openModal} 0.5s linear;\n  }\n\n  &.entering > div {\n    animation: ${openModalContent} 0.5s linear;\n  }\n  &.exiting {\n    animation: ${openModal} 0.5s linear reverse;\n  }\n  &.exiting > div {\n    animation: ${openModalContent} 0.5s linear reverse;\n  }\n`;\n\nexport const StyledModalContent = styled.div`\n  padding: 20px;\n  border-radius: 12px;\n  width: 50vw;\n  opacity: 1;\n\n  background: #ffffff;\n`;\n","import React, { useRef, memo } from \"react\";\n\nimport { StyledModal, StyledModalContent } from \"./Modal.styled\";\nimport { Transition } from \"react-transition-group\";\n\nimport Todo from \"../../store/Todo\";\nimport { useModal } from \"../../hooks/useModal\";\n\nconst Modal = ({ children }) => {\n  const nodeRef = useRef(null);\n  const { modal, toggleModal } = useModal();\n\n  const handleClick = (e) => {\n    e.stopPropagation();\n\n    toggleModal();\n    Todo.setCurrentTodo({});\n  };\n\n  return (\n    <Transition\n      nodeRef={nodeRef}\n      in={modal}\n      timeout={500}\n      mountOnEnter\n      unmountOnExit>\n      {(state) => (\n        <StyledModal\n          ref={nodeRef}\n          onClick={handleClick}\n          className={`${state}`}>\n          <StyledModalContent onClick={(e) => e.stopPropagation()}>{children}</StyledModalContent>\n        </StyledModal>\n      )}\n    </Transition>\n  );\n};\n\nexport default memo(Modal);\n","import styled from \"styled-components\";\n\nexport const StyledTodoItem = styled.li`\n  padding: 10px;\n  padding-left: 30px;\n\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  margin-top: 10px;\n  background: #fff;\n  border-radius: 8px;\n  position: relative;\n  box-shadow: 0 2px 4px rgb(0 0 0 / 10%), 0 8px 16px rgb(0 0 0 / 10%);\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 20px;\n    border-radius: 8px 0 0 8px;\n\n    background: ${({ priority, theme }) => theme.priorityColors[priority] || theme.primary.violet};\n  }\n`;\n\nexport const StyledTodoInfo = styled.div`\n  display: flex;\n  gap: 10px;\n  flex: 1 1 auto;\n  justify-content: space-between;\n`;\n\nexport const StyledTodoTitle = styled.h2`\n  font-size: 2em;\n  font-weight: 600;\n  color: #000000;\n  ${({ completed }) => (completed ? \"text-decoration: line-through;\" : \"\")}\n\n  margin-bottom: 5px;\n`;\n\nexport const StyledTodoSubtitle = styled.p`\n  color: #2e2e2e;\n  ${({ completed }) => (completed ? \"text-decoration: line-through;\" : \"\")}\n`;\n\nexport const StyledDateContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  flex: 0 0 auto;\n  gap: 10px;\n  align-items: flex-end;\n`;\n\nexport const StyledDate = styled.p`\n  color: #de1f85;\n\n  &:before {\n    content: \"${({ content }) => content || \"\"}\";\n    color: #2e2e2e;\n  }\n`;\n","import styled from \"styled-components\";\n\nconst StyledCheckbox = styled.div`\n  position: relative;\n  height: 20px;\n  flex: 0 0 20px;\n\n  border: 2px solid #000000;\n  border-radius: 5px;\n\n  cursor: pointer;\n  transition: background 0.2s linear;\n\n  & > svg {\n    position: absolute;\n    bottom: 3px;\n    left: 2px;\n  }\n\n  &:hover {\n    background: #c4c4c4;\n  }\n`;\n\nexport { StyledCheckbox };\n","import React from \"react\";\n\nconst CheckBird = () => {\n  return (\n    <svg\n      viewBox='180 70 128 99'\n      fill='#1fde78'\n      strokeWidth='5'\n      width='20'\n      stroke='#000000'>\n      <path d='M 185.333 118 L 180 130.667 L 216.333 169 L 308 76 L 302.333 70 L 216.333 143.333 L 185.333 118 Z' />\n    </svg>\n  );\n};\n\nexport default CheckBird;\n","import React, { memo } from \"react\";\n\nimport { StyledCheckbox } from \"./Checkbox.styled\";\nimport CheckBird from \"../../../icons/CheckBird.icon\";\n\nconst Chackbox = ({ completed, ...props }) => {\n  return <StyledCheckbox {...props}>{completed && <CheckBird />}</StyledCheckbox>;\n};\n\nexport default memo(Chackbox);\n","import React, { useCallback } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { observer } from \"mobx-react-lite\";\n\nimport {\n  StyledTodoItem,\n  StyledTodoInfo,\n  StyledTodoTitle,\n  StyledTodoSubtitle,\n  StyledDateContainer,\n  StyledDate,\n} from \"./TodoItem.styled\";\n\nimport Checkbox from \"../core-ui/checkbox/Checkbox\";\nimport Button from \"../core-ui/button/Button\";\nimport { dateToLocalString } from \"../../helpers/dateWorking\";\n\nimport Todo from \"../../store/Todo\";\nimport { Paths } from \"../../helpers/consts\";\nimport { useModal } from \"../../hooks/useModal\";\n\nconst TodoItem = ({ item }) => {\n  console.log(\"Item: \", item.id);\n\n  const location = useLocation();\n  const { title, completed, description, created, expected, priority } = item;\n  const { toggleModal } = useModal();\n\n  const changeHandle = useCallback(() => {\n    Todo.setCurrentTodo(item);\n    toggleModal();\n  }, [item]);\n\n  const recoverHandle = useCallback(() => {\n    Todo.setCurrentTodo(item);\n    Todo.recoverTodo(location.pathname);\n  }, [item, location.pathname]);\n\n  const checkHandle = useCallback(() => Todo.toggleCompleted(item), [item]);\n\n  return (\n    <StyledTodoItem priority={priority}>\n      <Checkbox\n        onClick={checkHandle}\n        completed={completed}\n      />\n\n      <StyledTodoInfo>\n        <div>\n          <StyledTodoTitle completed={completed}>{title}</StyledTodoTitle>\n          <StyledTodoSubtitle completed={completed}>{description}</StyledTodoSubtitle>\n        </div>\n        {(created || expected) && (\n          <StyledDateContainer>\n            {created && (\n              <StyledDate content={\"Created by: \"}>{dateToLocalString(created)}</StyledDate>\n            )}\n            {expected && (\n              <StyledDate content={\"Expected by: \"}>{dateToLocalString(expected)}</StyledDate>\n            )}\n          </StyledDateContainer>\n        )}\n      </StyledTodoInfo>\n      <Button onClick={changeHandle}>\n        {location.pathname === Paths.TRASH ? \"Delete\" : \"Change\"}\n      </Button>\n      {location.pathname !== Paths.TODOS && <Button onClick={recoverHandle}>Recover</Button>}\n    </StyledTodoItem>\n  );\n};\n\nexport default observer(TodoItem);\n","import React, { memo } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { headingInEmpty } from \"../../helpers/consts\";\nimport TodoItem from \"../todo-item/TodoItem\";\nimport { StyledTitle } from \"./TodoList.styled\";\n\nconst TodoList = ({ todos }) => {\n  const location = useLocation();\n\n  return Object.keys(todos).length ? (\n    <ul>\n      {todos.map((elem) => (\n        <TodoItem\n          key={elem.id}\n          item={elem}\n        />\n      ))}\n    </ul>\n  ) : (\n    <StyledTitle>{headingInEmpty[location.pathname]}</StyledTitle>\n  );\n};\n\nexport default memo(TodoList);\n","import styled from \"styled-components\";\n\nexport const StyledTitle = styled.h1`\n  text-align: center;\n  font-size: 2em;\n  font-weight: 700;\n`;\n","/**\n *\n * @param { DateConstructor } date\n * @returns string\n */\nexport const dateToString = (date) => {\n  if (!date) {\n    throw new Error(\"Date is required for converting process.\");\n  }\n\n  return date.toISOString().slice(0, 10);\n};\n\n/**\n *\n * @param { DateConstructor } date\n * @returns string\n */\nexport const dateToLocalString = (date) => date.toLocaleString(\"en-GB\").slice(0, 10);\n","export const priorityNumbers = (string) => {\n  const priority = {\n    high: 1,\n    medium: 2,\n    low: 3,\n  };\n  if (priority[string]) return priority[string];\n  return 0;\n};\n","import { useMemo } from \"react\";\nimport { priorityNumbers } from \"../helpers/priorityNumbers\";\n\n/**\n *\n * @param { string } sort\n * @param {*} todos\n * @returns\n */\nexport const useSortTodos = (sort, todos) => {\n  const sortedTodos = useMemo(() => {\n    switch (sort) {\n      case \"title\":\n      case \"description\":\n        return [...todos].sort((a, b) => a[sort]?.localeCompare(b[sort]));\n      case \"created\":\n      case \"expected\":\n        return [...todos].sort((a, b) => Date.parse(a[sort]) - Date.parse(b[sort]));\n\n      case \"priority\":\n        return [...todos].sort((a, b) => priorityNumbers(a[sort]) - priorityNumbers(b[sort]));\n\n      default:\n        return todos;\n    }\n  }, [sort, todos]);\n\n  return sortedTodos;\n};\n\nexport const useTodos = ({ sort, query }, todos) => {\n  const sortedTodos = useSortTodos(sort, todos);\n  const sortedAndSearchedTodos = useMemo(() => {\n    return sortedTodos.filter((todo) => todo.title?.toLowerCase().includes(query.toLowerCase()));\n  }, [query, sortedTodos]);\n\n  return sortedAndSearchedTodos;\n};\n","import styled from \"styled-components\";\n\nexport const StyledTitle = styled.h2`\n  text-align: center;\n  margin: 10px 0 50px;\n  font-size: 30px;\n`;\n","import React from \"react\";\nimport { StyledButtonsContainer } from \"../modal-form/ModalForm.styled\";\nimport Button from \"../core-ui/button/Button\";\nimport { StyledTitle } from \"./DeleteModal.styled\";\n\nimport Todo from \"../../store/Todo\";\nimport { useModal } from \"../../hooks/useModal\";\n\nconst DeleteModal = () => {\n  const { toggleModal } = useModal();\n\n  const deleteHandle = () => {\n    Todo.delete();\n    toggleModal();\n  };\n  return (\n    <>\n      <StyledTitle>Are you sure you want to delete?</StyledTitle>\n      <StyledButtonsContainer>\n        <Button onClick={deleteHandle}>Yes</Button>\n        <Button onClick={() => toggleModal()}>No</Button>\n      </StyledButtonsContainer>\n    </>\n  );\n};\n\nexport default DeleteModal;\n","import React, { useState } from \"react\";\nimport { useTodos } from \"../hooks/useTodos\";\nimport FilterForm from \"../components/filter-form/FilterForm\";\n\nimport Todo from \"../store/Todo\";\nimport TodoList from \"../components/todo-list/TodoList\";\nimport Modal from \"../components/modal/Modal\";\nimport DeleteModal from \"../components/delete-modal/DeleteModal\";\n\nimport { observer } from \"mobx-react-lite\";\n\nconst Trash = () => {\n  const [filter, setFilter] = useState({\n    sort: \"\",\n    query: \"\",\n  });\n  const sortedAndSearchedTodos = useTodos(filter, Todo.trash);\n\n  return (\n    <div>\n      <FilterForm\n        filter={filter}\n        setFilter={setFilter}\n      />\n      <TodoList todos={sortedAndSearchedTodos} />\n\n      <Modal>\n        <DeleteModal />\n      </Modal>\n    </div>\n  );\n};\n\nexport default observer(Trash);\n"],"names":["styled","Input","value","props","memo","StyledSelect","Select","defaultTitle","options","setValue","onChange","e","target","disabled","map","name","StyledFilterForm","FilterForm","filter","setFilter","inputHandle","useCallback","prev","query","selectHandle","newValue","sort","onSubmit","preventDefault","placeholder","StyledForm","StyledFieldset","StyledLegend","StyledRadioContainer","StyledButtonsContainer","StyledDatesContainer","openModal","keyframes","openModalContent","StyledModal","StyledModalContent","Modal","children","nodeRef","useRef","useModal","modal","toggleModal","handleClick","stopPropagation","Todo","Transition","in","timeout","mountOnEnter","unmountOnExit","state","ref","onClick","className","StyledTodoItem","priority","theme","priorityColors","primary","violet","StyledTodoInfo","StyledTodoTitle","completed","StyledTodoSubtitle","StyledDateContainer","StyledDate","content","StyledCheckbox","viewBox","fill","strokeWidth","width","stroke","d","Chackbox","observer","item","console","log","id","location","useLocation","title","description","created","expected","changeHandle","recoverHandle","pathname","checkHandle","Checkbox","dateToLocalString","Button","Paths","TodoList","todos","Object","keys","length","elem","headingInEmpty","StyledTitle","dateToString","date","Error","toISOString","slice","toLocaleString","priorityNumbers","string","high","medium","low","useTodos","sortedTodos","useMemo","a","b","localeCompare","Date","parse","useSortTodos","todo","toLowerCase","includes","useState","sortedAndSearchedTodos"],"sourceRoot":""}